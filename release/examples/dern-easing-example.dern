(require 'dern_easing)

(define x as {D+100} [value to be eased])

(easing-add 'in-out-back                ; type of easing
             x                          ; value to ease
             {D+100} {D+300}            ; ease starting from 100 with change of 300
             {D+1}                      ; duration of the ease in seconds
             {D+1.70158}                ; overshoot value for the 'in-out-back' ease
             [(println 'easing-done)])  ; optional string to be evaluated when the easing is done

(while (easing-has-any)
       (easing-update {D+0.1})          ; Update with time step of 0.1 seconds
       (println x))

(easing-add 'linear x {D+0} {D+10} {D+1} [(println |string-start|easing-done|string-end|)] )

(while (easing-has-any)
       (easing-update {D+0.1})          ; Update with time step of 0.1 seconds
       (print [{} ]  x))

(println)

